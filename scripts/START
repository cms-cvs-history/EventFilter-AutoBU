#!/usr/bin/env perl

use State;
use Time::HiRes qw(usleep);

my $MODE = shift;
my $ENABLE = shift;

my $allInit = 0;
my $allReady = 0;

my @slash = ("|", "/", "-", "\\");
my $pos = 0;

#********************
# SET TO LOCAL VALUES
#********************
my $xdaqDocRoot = "/home/aspataru/cmssw/htdocs";
my $rootFilePath = "../../realData.root";
#********************

#make current filehandler HOT
$| = 1;

print "Local Filter Farm starting! \n";

# set environment variables
my @exports = `scram runtime -sh`;
my $key = 0;
my $value = 0;

foreach (@exports){
 my $currentLine = $_;
 $currentLine =~ m/export (.*)=\"(.*)\";/;
 $key = $1;
 $value = $2;

 #actually set the env variables
 $ENV{"$key"} = "$value";
}

# set XDAQ_DOCUMENT_ROOT
$ENV{"XDAQ_DOCUMENT_ROOT"} = $xdaqDocRoot;

# initialise all components
if ($MODE eq "g") {
 print "Mode = GENERATED; Running initialize script...\n";
 `./initialize -fork 3`;
}
elsif ($MODE eq "p") {
 print "Mode = PLAYBACK; Running initialize script...\n";
 `./initialize -fork 3 -playback $rootFilePath`;
}
elsif ($MODE eq "r") {
 print "Mode = PLAYBACK-REPLAY; Running initialize script...\n";
 `./initialize -fork 3 -playback $rootFilePath -replay`;
}
else {
 die ("Usage:
	START g [-e] - generated [-enable after configure]
	START p [-e] - playback [-enable after configure]
	START r [-e] - playback-replay [-enable after configure]");
}

while ($allInit == 0) {
 print "Waiting for all components to initialise... $slash[$pos]\r";
  $pos++;
  if ($pos == 4) {
   $pos = 0;
  }	
 if (State::is_BU_initialised && State::is_RB_initialised && State::is_EP_initialised && State::is_SM_initialised) {
  $allInit = 1;
 }
 #sleep for 300ms between polls
 usleep(300000);
}

$pos = 0;
print "\r\n";
print "All components initialised! \n";

#configure all components
print "Running configure script...\n";
`./configure`;

while ($allReady == 0) {
 print "Waiting for all components to be configured... $slash[$pos]\r";
  $pos++;
  if ($pos == 4) {
   $pos = 0;
  }
 if (State::is_BU_ready && State::is_RB_ready && State::is_EP_ready && State::is_SM_ready) {
  $allReady = 1;
 }
 #sleep for 300ms between polls
 usleep(300000);
}

print "\r\n";
print "All components ready! \n";

# also enable after configuration done
if ($ENABLE eq "-e") {
 print "Enabling... \n";
 `./enable`;
}
elsif ($ENABLE ne "") {
 print "Option \"$ENABLE\" not valid! \n";
}

##
print "Filter Farm STARTED! \n";
##
